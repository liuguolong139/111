onst axios = require('axios');
const cheerio = require('cheerio');

const baseURL = 'http://10.221.178.43:9102'; 

async function fetchHTML(url) {
  try {
    const { data } = await axios.get(url, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Linux; Android 12; Redmi K30 Build/SKQ1.210908.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/116.0.0.0 Mobile Safari/537.36 XWEB/1160065 MMWEBSDK/20231202 MMWEBID/932 MicroMessenger/8.0.47.2560(0x28002F30) WeChat/arm64 Weixin NetType/WIFI Language/zh_CN ABI/arm64',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
      },
      httpsAgent: new (require('https').Agent)({
        rejectUnauthorized: false,
      }),
    });
    return data;
  } catch (error) {
    console.error(`Error fetching ${url}: ${error.message}`);
    return null;
  }
}
function extractLinks(html) {
  const $ = cheerio.load(html);
  const links = [];
  $('a').each((index, element) => {
    const link = $(element).attr('href');
    if (link && link.startsWith('http')) {
      links.push(link);
    } else if (link && link.startsWith('/')) {
      links.push(baseURL + link);
    }
  });

  $('link').each((index, element) => {
    const link = $(element).attr('href');
    if (link && link.startsWith('http')) {
      links.push(link);
    } else if (link && link.startsWith('/')) {
      links.push(baseURL + link);
    }
    
  $('script').each((index, element) => {
    const link = $(element).attr('src');
    if (link && link.startsWith('http')) {
      links.push(link);
    } else if (link && link.startsWith('/')) {
      links.push(baseURL + link);
    }
  });
  });
  console.log(links);
  return links;
}

async function checkLink(url) {
  try {
    const response = await axios.head(url, {
        headers: {
            'User-Agent': 'Mozilla/5.0 (Linux; Android 12; Redmi K30 Build/SKQ1.210908.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/116.0.0.0 Mobile Safari/537.36 XWEB/1160065 MMWEBSDK/20231202 MMWEBID/932 MicroMessenger/8.0.47.2560(0x28002F30) WeChat/arm64 Weixin NetType/WIFI Language/zh_CN ABI/arm64',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
          },
      httpsAgent: new (require('https').Agent)({
        rejectUnauthorized: false,
      }),
    });
    if (response.status >= 400) {
      console.log(`无效链接: ${url} (Status: ${response.status})`);
    }
  } catch (error) {
    console.log(`无效链接: ${url} (Error: ${error.message})`);
  }
}

async function main() {
  const html = await fetchHTML(baseURL);
  if (!html) return;
  const links = extractLinks(html);
  console.log(`找到 ${links.length}链接`);
  for (const link of links) {
    await checkLink(link);
  }
  console.log('完毕.');
}
main();
